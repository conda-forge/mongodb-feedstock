From 5a9a16676b9926be4e22bd967529508284b7cb7d Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Fri, 8 Jul 2022 23:37:22 -0400
Subject: [PATCH 11/16] Don't inject ICU Macros if using pre-compiled library

---
 src/third_party/mozjs/SConscript | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/src/third_party/mozjs/SConscript b/src/third_party/mozjs/SConscript
index 15cf112989b..ccae581ca4b 100644
--- a/src/third_party/mozjs/SConscript
+++ b/src/third_party/mozjs/SConscript
@@ -3,6 +3,7 @@
 Import([
     "get_option",
     "env",
+    "use_system_version_of_library",
 ])
 
 env = env.Clone()
@@ -28,6 +29,7 @@ env.Prepend(CPPDEFINES=[
     ('IMPL_MFBT', 1),
     ('JS_USE_CUSTOM_ALLOCATOR', 1),
     ('STATIC_JS_API', 1),
+] + [
     ('U_NO_DEFAULT_INCLUDE_UTF_HEADERS', 1),
     ('UCONFIG_NO_BREAK_ITERATION', 1),
     ('UCONFIG_NO_FORMATTING', 1),
@@ -37,7 +39,7 @@ env.Prepend(CPPDEFINES=[
     ('U_DISABLE_RENAMING', 1),
     ('U_STATIC_IMPLEMENTATION', 1),
     ('U_USING_ICU_NAMESPACE', 0),
-])
+] if not use_system_version_of_library("icu") else [])
 
 if get_option('spider-monkey-dbg') == "on":
     env.Prepend(CPPDEFINES=[
@@ -107,12 +109,12 @@ env.Prepend(CPPPATH=[
     'extract/js/src/jit',
     'extract/js/src/gc',
     'extract/mfbt',
-    'extract/intl/icu/source/common',
     'include',
     'mongo_sources',
     'platform/' + env["TARGET_ARCH"] + "/" + env["TARGET_OS"] + "/build",
     'platform/' + env["TARGET_ARCH"] + "/" + env["TARGET_OS"] + "/include",
-])
+] + ['extract/intl/icu/source/common'] if not use_system_version_of_library("icu") else []
+)
 
 sources = [
     "mongo_sources/mongoErrorReportToString.cpp",
@@ -283,7 +285,8 @@ env.Append(
         ('U_DISABLE_RENAMING', 1),
         ('U_STATIC_IMPLEMENTATION', 1),
         ('U_USING_ICU_NAMESPACE', 0),
-    ], )
+    ] if not use_system_version_of_library("icu") else [],
+)
 
 if env.TargetOSIs('solaris'):
     # On Solaris, compile of certain files fails if the below define is not enabled.  Specifically,
