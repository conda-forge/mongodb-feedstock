From 6554dadd6bdaca9694ce8cf192ee7815a9eb110a Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Sat, 26 Sep 2020 16:05:30 -0400
Subject: [PATCH 09/17] MSVC: Don't generating debug info forcefully

---
 SConstruct                              | 38 ++++++++++++-------------
 site_scons/site_tools/separate_debug.py |  6 ++--
 2 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/SConstruct b/SConstruct
index e0f5819dbfe..7cb657b6a1c 100644
--- a/SConstruct
+++ b/SConstruct
@@ -2326,11 +2326,11 @@ elif env.TargetOSIs('windows'):
     # Don't send error reports in case of internal compiler error
     env.Append( CCFLAGS= ["/errorReport:none"] )
 
-    # Select debugging format. /Zi gives faster links but seems to use more memory.
-    if get_option('msvc-debugging-format') == "codeview":
-        env['CCPDBFLAGS'] = "/Z7"
-    elif get_option('msvc-debugging-format') == "pdb":
-        env['CCPDBFLAGS'] = '/Zi /Fd${TARGET}.pdb'
+#    # Select debugging format. /Zi gives faster links but seems to use more memory.
+#    if get_option('msvc-debugging-format') == "codeview":
+#        env['CCPDBFLAGS'] = "/Z7"
+#    elif get_option('msvc-debugging-format') == "pdb":
+#        env['CCPDBFLAGS'] = '/Zi /Fd${TARGET}.pdb'
 
 
     # The SCons built-in pdbGenerator always adds /DEBUG, but we would like
@@ -2343,18 +2343,18 @@ elif env.TargetOSIs('windows'):
             return None
     env['_PDB'] = pdbGenerator
 
-    # /DEBUG will tell the linker to create a .pdb file
-    # which WinDbg and Visual Studio will use to resolve
-    # symbols if you want to debug a release-mode image.
-    # Note that this means we can't do parallel links in the build.
-    #
-    # Please also note that this has nothing to do with _DEBUG or optimization.
-
-    # If the user set a /DEBUG flag explicitly, don't add
-    # another. Otherwise use the standard /DEBUG flag, since we always
-    # want PDBs.
-    if not any(flag.startswith('/DEBUG') for flag in env['LINKFLAGS']):
-        env.Append(LINKFLAGS=["/DEBUG"])
+#    # /DEBUG will tell the linker to create a .pdb file
+#    # which WinDbg and Visual Studio will use to resolve
+#    # symbols if you want to debug a release-mode image.
+#    # Note that this means we can't do parallel links in the build.
+#    #
+#    # Please also note that this has nothing to do with _DEBUG or optimization.
+#
+#    # If the user set a /DEBUG flag explicitly, don't add
+#    # another. Otherwise use the standard /DEBUG flag, since we always
+#    # want PDBs.
+#    if not any(flag.startswith('/DEBUG') for flag in env['LINKFLAGS']):
+#        env.Append(LINKFLAGS=["/DEBUG"])
 
     # /MD:  use the multithreaded, DLL version of the run-time library (MSVCRT.lib/MSVCR###.DLL)
     # /MDd: Defines _DEBUG, _MT, _DLL, and uses MSVCRTD.lib/MSVCRD###.DLL
@@ -2425,8 +2425,8 @@ elif env.TargetOSIs('windows'):
     )
 
 # When building on visual studio, this sets the name of the debug symbols file
-if env.ToolchainIs('msvc'):
-    env['PDB'] = '${TARGET.base}.pdb'
+# if env.ToolchainIs('msvc'):
+#    env['PDB'] = '${TARGET.base}.pdb'
 
 # Python uses APPDATA to determine the location of user installed
 # site-packages. If we do not pass this variable down to Python
diff --git a/site_scons/site_tools/separate_debug.py b/site_scons/site_tools/separate_debug.py
index 677ef75723e..b6b7fa17bf6 100644
--- a/site_scons/site_tools/separate_debug.py
+++ b/site_scons/site_tools/separate_debug.py
@@ -122,9 +122,9 @@ def _update_builder(env, builder):
         elif env.TargetOSIs("posix"):
             debug_file = env.File(str(target[0]) + ".debug")
             debug_files.append(debug_file)
-        elif env.TargetOSIs("windows"):
-            debug_file = env.File(env.subst("${PDB}", target=target))
-            debug_files.append(debug_file)
+#        elif env.TargetOSIs("windows"):
+#            debug_file = env.File(env.subst("${PDB}", target=target))
+#            debug_files.append(debug_file)
         else:
             pass
 
